{"version":3,"sources":["components/Cars/index.tsx","components/Bikes/index.tsx","components/Owned/index.tsx","components/Dealership/index.tsx","App.tsx","index.tsx"],"names":["slots","Cars","list","handleSpawn","useState","open","setOpen","selected","setSelected","closeBuy","undefined","anchor","setAnchor","List","Grid","container","spacing","map","veh","item","xs","Paper","ListItem","ListItemText","primary","name","secondary","Intl","NumberFormat","style","currency","format","price","chest","ListItemSecondaryAction","right","Tooltip","title","arrow","IconButton","onClick","e","currentTarget","handleClick","k","CameraAlt","openBuy","AttachMoney","Menu","id","anchorEl","keepMounted","Boolean","onClose","slot","MenuItem","handleSlot","Dialog","DialogTitle","DialogActions","justifyContent","padding","Button","color","startIcon","AccountBalanceWallet","fetch","headers","method","body","JSON","stringify","then","res","json","cb","catch","err","console","log","Close","Bikes","form","Owned","updateOwned","closeSell","openSell","ShoppingCart","Dealership","page","setPage","cars","setCars","search","setSearch","vehicle","handleEvent","event","data","action","namelist","sort","a","b","document","getElementById","display","useEffect","window","addEventListener","onkeyup","which","removeEventListener","className","Search","type","placeholder","value","onChange","target","teste","filter","element","toLowerCase","includes","BottomNavigation","newVal","BottomNavigationAction","icon","DriveEta","Motorcycle","Bookmarks","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.47b02143.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Material\r\nimport { List, ListItem, ListItemSecondaryAction, ListItemText,\r\n    IconButton, Paper, Grid, Tooltip, Menu, MenuItem,\r\n    Button, DialogActions, DialogTitle, Dialog} from '@material-ui/core';\r\nimport { AttachMoney, CameraAlt, Close, AccountBalanceWallet } from '@material-ui/icons';\r\n\r\ninterface List {\r\n    price: number;\r\n    chest: number;\r\n    k: string;\r\n    name: string;\r\n}\r\n\r\ninterface Props {\r\n    list: List[] | undefined;\r\n    handleSpawn: (veh: string, slot: number) => void;\r\n}\r\n\r\nconst slots = [1,2,3,4];\r\n\r\nconst Cars: React.FC<Props> = ({ list, handleSpawn }) => {\r\n    const [open, setOpen] = useState<boolean>(false);\r\n    const [selected, setSelected] = useState<string | undefined>();\r\n    \r\n    const openBuy = (veh: string) => {\r\n        setSelected(veh);\r\n        setOpen(true);\r\n    }\r\n    const closeBuy = () => {\r\n        setSelected(undefined);\r\n        setOpen(false);\r\n    }\r\n    const doBuy = () => {\r\n        if (selected === undefined) return;\r\n\r\n        fetch(\"http://vrp_benefactor/RequestBuy\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                name: selected\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(cb => {\r\n            setOpen(false);\r\n            setSelected(undefined);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n    const handleSlot = (slot: number) => {\r\n        if (selected === undefined) return;\r\n\r\n        handleSpawn(selected, slot);\r\n        setAnchor(null);\r\n        setSelected(undefined);\r\n    }\r\n\r\n    // Anchor Menu\r\n    const [anchor, setAnchor] = useState<null | HTMLElement>(null);\r\n    const handleClick = (e: React.MouseEvent<HTMLButtonElement>, veh: string) => {\r\n        setAnchor(e.currentTarget);\r\n        setSelected(veh);\r\n    }\r\n    const handleClose = () => {\r\n        setAnchor(null);\r\n        setSelected(undefined);\r\n    }\r\n\r\n    return (\r\n        <List>\r\n            <Grid container spacing={2}>\r\n                {list?.map(veh => (\r\n                    <Grid item xs={6}>\r\n                        <Paper>\r\n                            <ListItem>\r\n                                <ListItemText\r\n                                    primary={veh.name}\r\n                                    secondary={`${Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD'}).format(veh.price)} - ${veh.chest}KG`}\r\n                                />\r\n                                <ListItemSecondaryAction style={{right: \"4px\"}}>\r\n                                    <Tooltip title=\"Visualizar\" arrow>\r\n                                        <IconButton onClick={(e) => handleClick(e, veh.k)}>\r\n                                            <CameraAlt />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                    <Tooltip title=\"Comprar\" arrow>\r\n                                        <IconButton onClick={() => openBuy(veh.k)}>\r\n                                            <AttachMoney />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        </Paper>\r\n                    </Grid> \r\n                ))}\r\n            </Grid>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchor}\r\n                keepMounted\r\n                open={Boolean(anchor)}\r\n                onClose={handleClose}\r\n            >\r\n                {slots.map(slot => (\r\n                    <MenuItem onClick={() => handleSlot(slot)}>{slot}</MenuItem>\r\n                ))}\r\n            </Menu>\r\n            <Dialog\r\n                open={open}\r\n                onClose={closeBuy}\r\n            >\r\n                <DialogTitle>Tem certeza que deseja comprar um {selected}?</DialogTitle>\r\n                <DialogActions style={{ justifyContent: 'space-between', padding: '16px'}}>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        startIcon={<AccountBalanceWallet />}\r\n                        onClick={doBuy}\r\n                    >\r\n                        Comprar\r\n                    </Button>\r\n                    <Button\r\n                        color=\"secondary\"\r\n                        startIcon={<Close />}\r\n                        onClick={closeBuy}\r\n                    >\r\n                        Cancelar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default Cars;","import React, { useState } from 'react';\r\n\r\n// Material\r\nimport { List, ListItem, ListItemSecondaryAction, ListItemText,\r\n    IconButton, Paper, Grid, Tooltip, Menu, MenuItem,\r\n    Button, DialogActions, DialogTitle, Dialog} from '@material-ui/core';\r\nimport { AttachMoney, CameraAlt, Close, AccountBalanceWallet } from '@material-ui/icons';\r\n\r\ninterface List {\r\n    price: number;\r\n    chest: number;\r\n    k: string;\r\n    name: string;\r\n}\r\n\r\ninterface Props {\r\n    list: List[] | undefined;\r\n    handleSpawn: (veh: string, slot: number) => void;\r\n}\r\n\r\nconst slots = [1,2,3,4];\r\n\r\nconst Bikes: React.FC<Props> = ({ list, handleSpawn }) => {\r\n    const [open, setOpen] = useState<boolean>(false);\r\n    const [selected, setSelected] = useState<string | undefined>();\r\n    \r\n    const openBuy = (veh: string) => {\r\n        setSelected(veh);\r\n        setOpen(true);\r\n    }\r\n    const closeBuy = () => {\r\n        setSelected(undefined);\r\n        setOpen(false);\r\n    }\r\n    const doBuy = () => {\r\n        if (selected === undefined) return;\r\n\r\n        fetch(\"http://vrp_benefactor/RequestBuy\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                name: selected,\r\n                form: \"vista\"\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(cb => {\r\n            setOpen(false);\r\n            setSelected(undefined);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n    const handleSlot = (slot: number) => {\r\n        if (selected === undefined) return;\r\n\r\n        handleSpawn(selected, slot);\r\n        setAnchor(null);\r\n        setSelected(undefined);\r\n    }\r\n\r\n    // Anchor Menu\r\n    const [anchor, setAnchor] = useState<null | HTMLElement>(null);\r\n    const handleClick = (e: React.MouseEvent<HTMLButtonElement>, veh: string) => {\r\n        setAnchor(e.currentTarget);\r\n        setSelected(veh);\r\n    }\r\n    const handleClose = () => {\r\n        setAnchor(null);\r\n        setSelected(undefined);\r\n    }\r\n\r\n    return (\r\n        <List>\r\n            <Grid container spacing={2}>\r\n                {list?.map(veh => (\r\n                    <Grid item xs={6}>\r\n                        <Paper>\r\n                            <ListItem>\r\n                                <ListItemText\r\n                                    primary={veh.name}\r\n                                    secondary={`${Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD'}).format(veh.price)} - ${veh.chest}KG`}\r\n                                />\r\n                                <ListItemSecondaryAction style={{right: \"4px\"}}>\r\n                                    <Tooltip title=\"Visualizar\" arrow>\r\n                                        <IconButton onClick={(e) => handleClick(e, veh.k)}>\r\n                                            <CameraAlt />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                    <Tooltip title=\"Comprar\" arrow>\r\n                                        <IconButton onClick={() => openBuy(veh.k)}>\r\n                                            <AttachMoney />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        </Paper>\r\n                    </Grid> \r\n                ))}\r\n            </Grid>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchor}\r\n                keepMounted\r\n                open={Boolean(anchor)}\r\n                onClose={handleClose}\r\n            >\r\n                {slots.map(slot => (\r\n                    <MenuItem onClick={() => handleSlot(slot)}>{slot}</MenuItem>\r\n                ))}\r\n            </Menu>\r\n            <Dialog\r\n                open={open}\r\n                onClose={closeBuy}\r\n            >\r\n                <DialogTitle>Tem certeza que deseja comprar uma {selected}?</DialogTitle>\r\n                <DialogActions style={{ justifyContent: 'space-between', padding: '16px'}}>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        startIcon={<AccountBalanceWallet />}\r\n                        onClick={doBuy}\r\n                    >\r\n                        Comprar\r\n                    </Button>\r\n                    <Button\r\n                        color=\"secondary\"\r\n                        startIcon={<Close />}\r\n                        onClick={closeBuy}\r\n                    >\r\n                        Cancelar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default Bikes;","import React, { useState } from 'react';\r\n\r\n// Material\r\nimport { List, ListItem, ListItemSecondaryAction, ListItemText,\r\n    IconButton, Paper, Grid, Tooltip, Button,\r\n    DialogActions, DialogTitle, Dialog } from '@material-ui/core';\r\nimport { ShoppingCart, Close } from '@material-ui/icons';\r\n\r\ninterface List {\r\n    price: number;\r\n    chest: number;\r\n    k: string;\r\n    name: string;\r\n}\r\n\r\ninterface Props {\r\n    list: List[] | undefined;\r\n    updateOwned: () => void;\r\n}\r\n\r\nconst Owned: React.FC<Props> = ({ list, updateOwned }) => {\r\n    const [open, setOpen] = useState<boolean>(false);\r\n    const [selected, setSelected] = useState<string | undefined>();\r\n\r\n    const openSell = (veh: string) => {\r\n        setSelected(veh);\r\n        setOpen(true);\r\n    }\r\n    const closeSell = () => {\r\n        setSelected(undefined);\r\n        setOpen(false);\r\n    }\r\n    const doSell = () => {\r\n        if (selected === undefined) return;\r\n\r\n        fetch(\"http://vrp_benefactor/RequestSell\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({ name: selected })\r\n        })\r\n        .then(res => res.json())\r\n        .then(cb => {\r\n            setOpen(false);\r\n            setSelected(undefined);\r\n            updateOwned();\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <List>\r\n            <Grid container spacing={2}>\r\n                {list?.map(veh => (\r\n                    <Grid item xs={6}>\r\n                        <Paper>\r\n                            <ListItem>\r\n                                <ListItemText\r\n                                    primary={veh.name}\r\n                                    secondary={`${Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD'}).format(veh.price)} - ${veh.chest}KG`}\r\n                                />\r\n                                <ListItemSecondaryAction style={{right: \"4px\"}}>\r\n                                    <Tooltip title=\"Vender\" arrow>\r\n                                        <IconButton onClick={() => openSell(veh.k)}>\r\n                                            <ShoppingCart />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        </Paper>\r\n                    </Grid> \r\n                ))}\r\n            </Grid>\r\n            <Dialog\r\n                open={open}\r\n                onClose={closeSell}\r\n            >\r\n                <DialogTitle>Tem certeza que deseja vender o seu {selected}?</DialogTitle>\r\n                <DialogActions style={{ justifyContent: 'space-between', padding: '16px'}}>\r\n                    <div>\r\n                        <Button\r\n                            color=\"primary\"\r\n                            startIcon={<ShoppingCart />}\r\n                            onClick={doSell}\r\n                        >\r\n                            Vender\r\n                        </Button>\r\n                    </div>\r\n                    <div>\r\n                        <Button\r\n                            color=\"secondary\"\r\n                            startIcon={<Close />}\r\n                            onClick={closeSell}\r\n                        >\r\n                            Cancelar\r\n                        </Button>\r\n                    </div>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default Owned;","import React, { useState, useEffect } from 'react';\r\nimport './styles.scss';\r\n\r\n// Pages\r\nimport Cars from '../Cars';\r\nimport Bikes from '../Bikes';\r\nimport Owned from '../Owned';\r\n\r\n// Material\r\nimport { BottomNavigation,\r\n    BottomNavigationAction, Paper, IconButton } from '@material-ui/core';\r\n    import { DriveEta, Motorcycle, Bookmarks, Search } from '@material-ui/icons';\r\n\r\ninterface List {\r\n    price: number;\r\n    chest: number;\r\n    k: string;\r\n    name: string;\r\n}\r\n\r\nconst Dealership: React.FC = () => {\r\n    const [page, setPage] = useState<number>(0);\r\n    // List\r\n    const [cars, setCars] = useState<List[] | undefined>();\r\n    // Search\r\n    const [search, setSearch] = useState<string>(\"\");\r\n\r\n    const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(e.target.value);\r\n        if (e.target.value !== \"\") {\r\n            const teste = cars?.filter((element) => {\r\n                const name = element.name.toLowerCase();\r\n                return name.includes(e.target.value.toLowerCase());\r\n            });\r\n\r\n            if (teste === undefined) return;\r\n            const namelist = teste.sort((a:any,b:any) => (a.name > b.name) ? 1: -1);\r\n            setCars(namelist);\r\n        } else {\r\n            if (page === 0) {\r\n                fetch(\"http://vrp_benefactor/GetCars\", {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({})\r\n                })\r\n                .then(res => res.json())\r\n                .then(cb => {\r\n                    const namelist = cb.sort((a:any,b:any) => (a.name > b.name) ? 1: -1);\r\n                    setCars(namelist);\r\n                    setPage(0);    \r\n                })\r\n            } else if (page === 1) {\r\n                fetch(\"http://vrp_benefactor/GetBikes\", {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({})\r\n                })\r\n                .then(res => res.json())\r\n                .then(cb => {\r\n                    const namelist = cb.sort((a:any,b:any) => (a.name > b.name) ? 1: -1);\r\n                    setCars(namelist);\r\n                    setPage(1);    \r\n                })\r\n            }\r\n        }     \r\n    }\r\n\r\n    const updateOwned = () => {\r\n        fetch(\"http://vrp_benefactor/GetOwned\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({})\r\n        })\r\n        .then(res => res.json())\r\n        .then(cb => {\r\n            const namelist = cb.sort((a:any,b:any) => (a.name > b.name) ? 1: -1);\r\n            setCars(namelist);\r\n            setPage(2);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    const handleSpawn = (veh: string, slot: number) => {\r\n        fetch(\"http://vrp_benefactor/HandleSpawn\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                vehicle: veh,\r\n                slot: slot\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n    const handleEvent = (event:any) => {\r\n        if (event === undefined) return;\r\n        const message = event.data;\r\n\r\n        switch(message.action) {\r\n            case \"show\":\r\n                fetch(\"http://vrp_benefactor/GetCars\", {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({})\r\n                })\r\n                .then(res => res.json())\r\n                .then(cb => {\r\n                    const namelist = cb.sort((a:any,b:any) => (a.name > b.name) ? 1: -1);\r\n                    setCars(namelist);\r\n                    setPage(0);\r\n                    (document.getElementById(\"root\") as HTMLDivElement).style.display = \"block\";\r\n                })\r\n                .catch(err => console.log(err));\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"message\", handleEvent);\r\n        window.onkeyup = (data:any) => {\r\n            if (data.which === 27) {\r\n                (document.getElementById(\"root\") as HTMLDivElement).style.display = \"none\";\r\n                fetch(\"http://vrp_benefactor/CloseApp\", {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({})\r\n                })\r\n                .catch(err => console.log(err));\r\n            }\r\n        };\r\n        return () => {\r\n            window.removeEventListener(\"message\", handleEvent);\r\n        }\r\n    }, [handleEvent]);\r\n\r\n    return (\r\n        <div className=\"dealerContainer\">\r\n            {page === 0 || page === 1 ? (\r\n                <Paper className=\"searchBar\">\r\n                    <IconButton>\r\n                        <Search />\r\n                    </IconButton>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"searchField\"\r\n                        placeholder=\"Buscar veículo...\"\r\n                        value={search}\r\n                        onChange={handleSearch}\r\n                    />\r\n                </Paper>\r\n            ) : (\"\")}\r\n            <div className=\"vehiclesContainer\">\r\n                {\r\n                    page === 0 ?\r\n                    <Cars list={cars} handleSpawn={handleSpawn} />:\r\n                    page === 1 ?\r\n                    <Bikes list={cars} handleSpawn={handleSpawn} />:\r\n                    <Owned list={cars} updateOwned={updateOwned} />\r\n                }\r\n            </div>\r\n            <BottomNavigation\r\n                value={page}\r\n                className=\"dealerNav\"\r\n                onChange={(e, newVal) => {\r\n                    if (newVal === 0) {\r\n                        fetch(\"http://vrp_benefactor/GetCars\", {\r\n                            headers: {\r\n                                \"Content-Type\": \"application/json\"\r\n                            },\r\n                            method: \"POST\",\r\n                            body: JSON.stringify({})\r\n                        })\r\n                        .then(res => res.json())\r\n                        .then(cb => {\r\n                            const namelist = cb.sort((a:any,b:any) => (a.name > b.name) ? 1: -1);\r\n                            setCars(namelist);\r\n                            setPage(newVal);\r\n                        })\r\n                        .catch(err => console.log(err));\r\n                    } else if (newVal === 1) {\r\n                        fetch(\"http://vrp_benefactor/GetBikes\", {\r\n                            headers: {\r\n                                \"Content-Type\": \"application/json\"\r\n                            },\r\n                            method: \"POST\",\r\n                            body: JSON.stringify({})\r\n                        })\r\n                        .then(res => res.json())\r\n                        .then(cb => {\r\n                            const namelist = cb.sort((a:any,b:any) => (a.name > b.name) ? 1: -1);\r\n                            setCars(namelist);\r\n                            setPage(newVal);\r\n                        })\r\n                        .catch(err => console.log(err));\r\n                    } else if (newVal === 2) {\r\n                        fetch(\"http://vrp_benefactor/GetOwned\", {\r\n                            headers: {\r\n                                \"Content-Type\": \"application/json\"\r\n                            },\r\n                            method: \"POST\",\r\n                            body: JSON.stringify({})\r\n                        })\r\n                        .then(res => res.json())\r\n                        .then(cb => {\r\n                            const namelist = cb.sort((a:any,b:any) => (a.name > b.name) ? 1: -1);\r\n                            setCars(namelist);\r\n                            setPage(newVal);\r\n                        })\r\n                        .catch(err => console.log(err));\r\n                    }\r\n                }}\r\n            >\r\n                <BottomNavigationAction icon={<DriveEta />} />\r\n                <BottomNavigationAction icon={<Motorcycle />} />\r\n                <BottomNavigationAction icon={<Bookmarks />} />\r\n            </BottomNavigation>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dealership;","import React from 'react';\nimport './assets/styles/global.scss';\n\n// Components\nimport Dealership from './components/Dealership';\n\nconst App: React.FC = () => {\n    return (\n        <div className=\"App\">\n            <Dealership />\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}